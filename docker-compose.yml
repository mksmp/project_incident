version: '3'

services:

  pr_incident_db: #Имя сервиса
    container_name: pr_incident_db #Имя с которым запустится контейнер
    hostname: pr_incident_db #Имя "хоста" которым будет считать себя контейнер
    image: mysql:latest #Образ из которого запускается контейнер
    volumes: #Подключаемые директории
      - dbdata:/var/lib/mysql #Директории вида хост_директория:директория_контейнера
    environment: #переменные окружения
      MYSQL_ROOT_PASSWORD: 23012002
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: project_incident_db
    ports: # Сопоставление портов хост-машины и контейнера
      - 3306:3306
    # networks:
    #   static-network:
    #     # ipv4_address: 172.127.0.4
    restart: unless-stopped #условие для рестарта в случае остановки контейнера

  pr_incident_app:
    container_name: pr_incident_app
    image: mksmp/project_incident:latest
    hostname: pr_incident_app
    logging: 
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
    build: # Параметры для сборки приложения
      context: ./ # Каталог, используемый для сборки
      dockerfile: Dockerfile # Файл, используемый для сборки образа приложения
    ports:
     - 5000:5000
    # networks:
    #   static-network:
        # ipv4_address: 172.127.0.3
    restart: unless-stopped
    depends_on: # Указание на зависимость сервиса от другого сервиса
      - pr_incident_db

###---------------------------------------------------------
#   # prometheus:
#   #   image: prom/prometheus:latest
#   #   container_name: prometheus
#   #   ports:
#   #     - "9090:9090"
#   #   volumes:
#   #     - /etc/prometheus:/etc/prometheus
#   #     - prometheus-data:/prometheus
#   #   restart: unless-stopped
#   #   command:
#   #     - "--config.file=/etc/prometheus/prometheus.yml"
#   grafana:
#     image: grafana/grafana:5.0.4
#     ports:
#       - "3000:3000"
#     networks:
#       static-network:
#         # ipv4_address: 172.127.0.6
#     environment:
#       - GF_AUTH_BASIC_ENABLED=false
#       - GF_AUTH_ANONYMOUS_ENABLED=true
#       - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
#   grafana-dashboards:
#     image: alpine:3.10
#     depends_on:
#       - grafana
#     volumes:
#       - ./grafana-data:/grafana
#     command: >
#       /bin/sh -c "
#         apk add --no-cache curl
#         echo 'waiting for grafana'
#         sleep 5s
#         cd /grafana
#         curl --request POST http://grafana:3000/api/datasources --header 'Content-Type: application/json' -d @datasources.json
#         curl --request POST http://grafana:3000/api/dashboards/db --header 'Content-Type: application/json' -d @dashboard.json"
# ###----------------------------------------

  grafana:
    image: grafana/grafana:5.1.0
    volumes:
      - ./grafana/config.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/default.yaml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
    depends_on:
      - prometheus
 
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

# networks:
#   static-network:
#     # ipam:
#     #   config:
#     #     - subnet: 172.127.0.0/24

volumes:
  dbdata:
  prometheus-data:
    driver: local